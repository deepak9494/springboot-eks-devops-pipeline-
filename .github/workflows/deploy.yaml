name: Build and Push to ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .  # root folder with Dockerfile and pom.xml

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          docker build -t my-springboot-app .

      - name: Debug secrets
        run: |
          echo "ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}"
          echo "AWS_REGION=${{ secrets.AWS_REGION }}"
          echo "EKS_CLUSTER_NAME=${{ secrets.EKS_CLUSTER_NAME }}"

      - name: Tag Docker image
        run: |
          docker tag my-springboot-app:latest ${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY }}:latest

      - name: Update kubeconfig for EKS cluster
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          mkdir -p ~/.kube
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Check kubectl context
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          kubectl config current-context
          kubectl get nodes

      - name: Deploy to EKS using kubectl
        env:
          KUBECONFIG: ~/.kube/config
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
